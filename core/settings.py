"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 2.1.15.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from pathlib import Path
from azure.identity import ManagedIdentityCredential, ClientSecretCredential

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '13%27dbe@$4vb-hkrp$k!jphn&%@7^%0ipy+sj$zi6d7%s$os('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = 'azurefirstapp-bzaag5aqguftdgeu.centralus-01.azurewebsites.net'
CSRF_TRUSTED_ORIGINS = ['https://' + 'azurefirstapp-bzaag5aqguftdgeu.centralus-01.azurewebsites.net']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'newapp',
    'storages'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
#Driver={ODBC Driver 18 for SQL Server};Server=tcp:myfirst-saikrosuri.database.windows.net,1433;Database=testing;Uid=saikrosuri;
#Pwd={your_password_here};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'mssql',
            'NAME': 'testing',
            'USER': 'saikrosuri@myfirst-saikrosuri',
            'PASSWORD': os.getenv('AZURE_MYSQL_PASSWORD'),
            'HOST': 'myfirst-saikrosuri.database.windows.net',
            'PORT': '1433',
            'OPTIONS': {
                'driver': 'ODBC Driver 18 for SQL Server',
                'Encrypt': 'yes',
                'TrustServerCertificate': 'no',
                'Connection Timeout': 60,
            },
        }
    }
else:
    tenant_id = os.environ.get("AZURE_TENANT_ID")
    client_id = os.environ.get("AZURE_CLIENT_ID")
    client_secret = os.environ.get("AZURE_CLIENT_SECRET")
    cred = ClientSecretCredential(tenant_id=tenant_id, client_id=client_id, client_secret=client_secret)
    accessToken = cred.get_token('https://ossrdbms-aad.database.windows.net/.default')
    DATABASES = {
        'default': {
            'ENGINE': 'mssql',
            'NAME': os.getenv('AZURE_MYSQL_NAME'),
            'USER': os.getenv('AZURE_MYSQL_USER'),
            'PASSWORD': os.getenv('AZURE_MYSQL_PASSWORD'),
            'HOST': os.getenv('AZURE_MYSQL_HOST'),
            'PORT': '1433',
            'OPTIONS': {
                'driver': 'ODBC Driver 18 for SQL Server',
                'Encrypt': 'yes',
                'TrustServerCertificate': 'no',
                'Connection Timeout': 60,
            },
        }
    }
# core/settings.py
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if DEBUG:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
else:
    DEFAULT_FILE_STORAGE = 'storages.backends.azure_storage.AzureStorage'
    AZURE_ACCOUNT_NAME = 'mediafilesstorage8900'
    AZURE_ACCOUNT_KEY = os.environ.get('AZURE_ACCOUNT_KEY', '')
    AZURE_CONTAINER = 'media'
    MEDIA_URL = f'https://{AZURE_ACCOUNT_NAME}.blob.core.windows.net/{AZURE_CONTAINER}/'



# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
# STATIC_URL = '/static/'
# STATICFILES_DIR = os.path.join(BASE_DIR, '/static')

if DEBUG:
    STATIC_URL = '/static/'
    STATICFILES_DIR = os.path.join(BASE_DIR, '/static')
else:
    # Use django-storages for static too
    STATIC_URL = '/static/'
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
